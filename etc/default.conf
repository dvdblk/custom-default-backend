# https://blog.adriaan.io/one-nginx-error-page-to-rule-them-all.html
map $status $status_text {
    400 "Bad Request";
    401 "Unauthorized";
    402 "Payment Required";
    403 "Forbidden";
    404 "Not Found";
    405 "Method Not Allowed";
    406 "Not Acceptable";
    407 "Proxy Authentication Required";
    408 "Request Timeout";
    409 "Conflict";
    410 "Gone";
    411 "Length Required";
    412 "Precondition Failed";
    413 "Payload Too Large";
    414 "URI Too Long";
    415 "Unsupported Media Type";
    416 "Range Not Satisfiable";
    417 "Expectation Failed";
    418 "I\'m a teapot";
    421 "Misdirected Request";
    422 "Unprocessable Entity";
    423 "Locked";
    424 "Failed Dependency";
    425 "Too Early";
    426 "Upgrade Required";
    428 "Precondition Required";
    429 "Too Many Requests";
    431 "Request Header Fields Too Large";
    451 "Unavailable For Legal Reasons";
    500 "Internal Server Error";
    501 "Not Implemented";
    502 "Bad Gateway";
    503 "Service Unavailable";
    504 "Gateway Timeout";
    505 "HTTP Version Not Supported";
    506 "Variant Also Negotiates";
    507 "Insufficient Storage";
    508 "Loop Detected";
    510 "Not Extended";
    511 "Network Authentication Required";
    default "Something went wrong... Please try again later.";
}

server {
    listen 8080;
    root /var/www/html;
    index error.html;

    location / {
        if ($http_x_code ~ "^$") {
            # default error code
            set $http_x_code 404;
        }

        # Unfortunately, can't return a variable from the location directive
        # see: https://stackoverflow.com/questions/53578968/is-it-possible-to-use-variable-with-redirect-code-in-nginx-configuration
        if ($http_x_code = 400) {
            return 400;
        }

        if ($http_x_code = 401) {
            return 401;
        }

        if ($http_x_code = 402) {
            return 402;
        }

        if ($http_x_code = 403) {
            return 403;
        }

        if ($http_x_code = 404) {
            return 404;
        }

        if ($http_x_code = 405) {
            return 405;
        }

        if ($http_x_code = 406) {
            return 406;
        }

        if ($http_x_code = 407) {
            return 407;
        }

        if ($http_x_code = 408) {
            return 408;
        }

        if ($http_x_code = 409) {
            return 409;
        }

        if ($http_x_code = 410) {
            return 410;
        }

        if ($http_x_code = 411) {
            return 411;
        }

        if ($http_x_code = 412) {
            return 412;
        }

        if ($http_x_code = 413) {
            return 413;
        }

        if ($http_x_code = 414) {
            return 414;
        }

        if ($http_x_code = 415) {
            return 415;
        }

        if ($http_x_code = 416) {
            return 416;
        }

        if ($http_x_code = 417) {
            return 417;
        }

        if ($http_x_code = 418) {
            return 418;
        }

        if ($http_x_code = 421) {
            return 421;
        }

        if ($http_x_code = 422) {
            return 422;
        }

        if ($http_x_code = 423) {
            return 423;
        }

        if ($http_x_code = 424) {
            return 424;
        }

        if ($http_x_code = 425) {
            return 425;
        }

        if ($http_x_code = 426) {
            return 426;
        }

        if ($http_x_code = 428) {
            return 428;
        }

        if ($http_x_code = 429) {
            return 429;
        }

        if ($http_x_code = 431) {
            return 431;
        }

        if ($http_x_code = 451) {
            return 451;
        }

        if ($http_x_code = 500) {
            return 500;
        }

        if ($http_x_code = 501) {
            return 501;
        }

        if ($http_x_code = 502) {
            return 502;
        }

        if ($http_x_code = 503) {
            return 503;
        }

        if ($http_x_code = 504) {
            return 504;
        }

        if ($http_x_code = 505) {
            return 505;
        }

        if ($http_x_code = 506) {
            return 506;
        }

        if ($http_x_code = 507) {
            return 507;
        }

        if ($http_x_code = 508) {
            return 508;
        }

        if ($http_x_code = 510) {
            return 510;
        }

        if ($http_x_code = 511) {
            return 511;
        }
    }

    location /healthz {
        access_log off;
        return 200 "healthy\n";
    }

    location /metrics {
        stub_status on;
    }

    error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 425 426 428 429 431 451 500 501 502 503 504 505 506 507 508 510 511 /error.html;
    location = /error.html {
        ssi on;
        internal;
        auth_basic off;
    }
}
